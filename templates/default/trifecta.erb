#!/bin/sh
### BEGIN INIT INFO
# Provides:          trifecta_ui
# Required-Start:    $local_fs $network $named $time $syslog
# Required-Stop:     $local_fs $network $named $time $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Description:       trifecta_ui service
### END INIT INFO

SERVICE_NAME=trifecta
SCRIPT=<%= node['trifecta']['path'] %>/trifecta/bin/trifecta_ui
RUNNING_PID=<%= node['trifecta']['path'] %>/trifecta/RUNNING_PID
RUNAS=root

PIDFILE=/var/run/trifecta.pid

start() {
  if [ -f "$PIDFILE" ] && kill -0 $(cat "$PIDFILE"); then
    echo "$SERVICE_NAME is already running ..." >&2
    return 1
  fi
  if [ -f "$RUNNING_PID" ]; then
    rm -f $RUNNING_PID
  fi  
  echo "Starting $SERVICE_NAME ..." >&2
  local CMD="$SCRIPT -Dhttp.port=<%= node['trifecta']['port'] %> &> /dev/null & echo \$!"
  su -c "$CMD" $RUNAS > "$PIDFILE"
  echo "$SERVICE_NAME started ..." >&2
}

stop() {
  if [ ! -f "$PIDFILE" ] || ! kill -0 $(cat "$PIDFILE"); then
    echo "$SERVICE_NAME is not runnig" >&2
    return 1
  fi
  echo "$SERVICE_NAME stoping ..." >&2
  kill -15 $(cat "$PIDFILE") && rm -f "$PIDFILE"
  echo "$SERVICE_NAME stopped ..." >&2
  if [ -f "$RUNNING_PID" ]; then
    rm -f $RUNNING_PID
  fi 
}

status() {
  if [ ! -f $PIDFILE ]; then
    echo "$SERVICE_NAME is not runnig"
  else
    echo "$SERVICE_NAME is running ..."
  fi
}

case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  restart)
    stop
    start
    ;;
    status)
      status
    ;;
  *)
    echo "Usage: $0 {start|stop|restart|status}"
esac